实验目的
================================================================================

通过调试一个简单的多任务内核实例，使大家可以熟练的掌握调试系统内核的方法。
这个内核示例中包含两个特权级 ``3`` 的用户任务和一个系统调用中断过程。我们首先说明这个简单内核的基本结构和加载运行的基本原理，然后描述它是如何被加载进机器 ``RAM`` 内存中以及两个任务是如何进行切换运行的。

..
    使用NASM编译器
    --------------

    * 如何进行编译源文件
    * 输出的文件格式有哪些
    * 如何将生成的多个文件进行拼接
    *

掌握如何手写Bochs虚拟机的配置文件
---------------------------------------------------------------------------

* 简介 ``Bochs`` 虚拟机的配置文件
* 如何设置从软驱启动
* 如何设置从硬盘启动
* 如何设置调试选项

掌握Bochs虚拟机的调试技巧
---------------------------------------------------------------------------

* 如何单步跟踪？
* 如何设置断点进行调试？
* 如何查看通用寄存器的值？
* 如何查看系统寄存器的值？
* 如何查看内存指定位置的值？
* 如何查看各种表，如 ``gdt`` ，``idt`` ，``ldt`` 等？
* 如何查看 ``TSS``？
* 如何查看栈中的内容？
* 如何在内存指定地方进行反汇编？


实验内容
================================================================================


计算机引导程序
---------------------------------------------------------------------------

* 如何查看 ``0x7c00`` 处被装载了什么？
* 如何把真正的内核程序从硬盘或软驱装载到自己想要放的地方;
* 如何查看实模式的中断程序？
* 如何静态创建 ``gdt`` 与 ``idt`` ？
* 如何从实模式切换到保护模式？
* 调试跟踪 ``jmpi 0,8`` ，解释如何寻址？


多任务内核程序
---------------------------------------------------------------------------

这里的实验报告建议用 ``Markdown`` 进行书写

实验报告 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

通过仔细的调试与跟踪程序，完成以下任务：

* 请简述 ``head.s`` 的工作原理
* 请记录 ``head.s`` 的内存分布状况，写明每个数据段，代码段，栈段的起始与终止的内存地址
* 简述 ``head.s``  ``57`` 至 ``62`` 行在做什么？
* 简述 ``iret`` 执行后， ``pc`` 如何找到下一条指令？
* 记录 ``iret`` 执行前后，栈是如何变化的？
* 当任务进行系统调用时，即 ``int 0x80`` 时，记录栈的变化情况。


实验报告 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

通过仔细的调试与跟踪程序，完成以下任务：

* 当执行完 ``system_interrupt`` 函数，执行 ``153`` 行 ``iret`` 时，记录栈的变化情况
* 当进入和退出 ``system_interrupt`` 时，都发生了模式切换，请总结模式切换时，特权级是如何改变的？栈切换吗？如何进行切换的？
* 当时钟中断发生，进入到 ``timer_interrupt`` 程序，请详细记录从任务 ``0`` 切换到任务 ``1`` 的过程。
* 又过了 ``10ms`` ，从任务1切换回到任务 ``0`` ，整个流程是怎样的？ ``TSS`` 是如何变化的？各个寄存器的值是如何变化的？
* 请详细总结任务切换的过程。
